
def xor_with_key(data, k):
    result = ''
    for c in data:
        A = ord(c)
        new = ((((((A & ((k & ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))))) + (k | ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))))))) + (A | ((k & ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))))) + (k | ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k)))))))))))) | (-((((A & k) + (A | k)) ^ (-(A + (k + (1 + ((~A) | (~k))))))) + (2 * (((A & k) + (A | k)) & (-(A + (k + (1 + ((~A) | (~k))))))))))) - (((A & ((k & ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))))) + (k | ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))))))) + (A | ((k & ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))))) + (k | ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k)))))))))))) & (-((((A & k) + (A | k)) ^ (-(A + (k + (1 + ((~A) | (~k))))))) + (2 * (((A & k) + (A | k)) & (-(A + (k + (1 + ((~A) | (~k)))))))))))) & (2 * ((((A & ((k & ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))))) + (k | ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))))))) + (A | ((k & ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))))) + (k | ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k)))))))))))) + (-((((A & k) + (A | k)) ^ (-(A + (k + (1 + ((~A) | (~k))))))) + (2 * (((A & k) + (A | k)) & (-(A + (k + (1 + ((~A) | (~k))))))))))) - (((A & ((k & ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))))) + (k | ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))))))) + (A | ((k & ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))))) + (k | ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k)))))))))))) | (-((((A & k) + (A | k)) ^ (-(A + (k + (1 + ((~A) | (~k))))))) + (2 * (((A & k) + (A | k)) & (-(A + (k + (1 + ((~A) | (~k)))))))))))))) + (((((A & ((k & ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))))) + (k | ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))))))) + (A | ((k & ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))))) + (k | ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k)))))))))))) | (-((((A & k) + (A | k)) ^ (-(A + (k + (1 + ((~A) | (~k))))))) + (2 * (((A & k) + (A | k)) & (-(A + (k + (1 + ((~A) | (~k))))))))))) - (((A & ((k & ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))))) + (k | ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))))))) + (A | ((k & ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))))) + (k | ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k)))))))))))) & (-((((A & k) + (A | k)) ^ (-(A + (k + (1 + ((~A) | (~k))))))) + (2 * (((A & k) + (A | k)) & (-(A + (k + (1 + ((~A) | (~k)))))))))))) | (2 * ((((A & ((k & ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))))) + (k | ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))))))) + (A | ((k & ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))))) + (k | ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k)))))))))))) + (-((((A & k) + (A | k)) ^ (-(A + (k + (1 + ((~A) | (~k))))))) + (2 * (((A & k) + (A | k)) & (-(A + (k + (1 + ((~A) | (~k))))))))))) - (((A & ((k & ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))))) + (k | ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))))))) + (A | ((k & ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))))) + (k | ((1 & ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k))))))) + (1 | ((~A) + ((~k) + (1 + ((~(~A)) | (~(~k)))))))))))) | (-((((A & k) + (A | k)) ^ (-(A + (k + (1 + ((~A) | (~k))))))) + (2 * (((A & k) + (A | k)) & (-(A + (k + (1 + ((~A) | (~k)))))))))))))))
        new = new % 127
        result = result.join(chr(new))
    return ''.join(result)

FLAG = "42HN{foobar}"
XOR_KEY = 0x13337

# Pre-compute the expected result
expected = xor_with_key(FLAG, XOR_KEY)

def main():
    print("Welcome to the XOR challenge!")
    print("Enter the correct input to get the flag:")
    
    user_input = input("> ")
    result = xor_with_key(user_input, XOR_KEY)
    if result == expected:
        print("Congratulations! You found the flag!")
    else:
        print("Wrong input. Try again!")

if __name__ == "__main__":
    main()
